//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Store.Web.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Web.UserService.AddressDto ContactAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Web.UserService.AddressDto DeliveryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsDisabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLogonDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> RegisteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Store.Web.UserService.RoleDto RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Web.UserService.AddressDto ContactAddress {
            get {
                return this.ContactAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactAddressField, value) != true)) {
                    this.ContactAddressField = value;
                    this.RaisePropertyChanged("ContactAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Web.UserService.AddressDto DeliveryAddress {
            get {
                return this.DeliveryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryAddressField, value) != true)) {
                    this.DeliveryAddressField = value;
                    this.RaisePropertyChanged("DeliveryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsDisabled {
            get {
                return this.IsDisabledField;
            }
            set {
                if ((this.IsDisabledField.Equals(value) != true)) {
                    this.IsDisabledField = value;
                    this.RaisePropertyChanged("IsDisabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogonDate {
            get {
                return this.LastLogonDateField;
            }
            set {
                if ((this.LastLogonDateField.Equals(value) != true)) {
                    this.LastLogonDateField = value;
                    this.RaisePropertyChanged("LastLogonDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> RegisteredDate {
            get {
                return this.RegisteredDateField;
            }
            set {
                if ((this.RegisteredDateField.Equals(value) != true)) {
                    this.RegisteredDateField = value;
                    this.RaisePropertyChanged("RegisteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Store.Web.UserService.RoleDto Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressDto", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
    [System.SerializableAttribute()]
    public partial class AddressDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleDto", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
    [System.SerializableAttribute()]
    public partial class RoleDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
    [System.SerializableAttribute()]
    public partial class FaultData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string FullMessage {
            get {
                return this.FullMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.FullMessageField, value) != true)) {
                    this.FullMessageField = value;
                    this.RaisePropertyChanged("FullMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/CreateUsers", ReplyAction="urn:IUserService/CreateUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/CreateUsersFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        Store.Web.UserService.UserDto[] CreateUsers(Store.Web.UserService.UserDto[] userDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/CreateUsers", ReplyAction="urn:IUserService/CreateUsersResponse")]
        System.Threading.Tasks.Task<Store.Web.UserService.UserDto[]> CreateUsersAsync(Store.Web.UserService.UserDto[] userDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/ValidateUser", ReplyAction="urn:IUserService/ValidateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/ValidateUserFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        bool ValidateUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/ValidateUser", ReplyAction="urn:IUserService/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/DisableUser", ReplyAction="urn:IUserService/DisableUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/DisableUserFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        bool DisableUser(Store.Web.UserService.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/DisableUser", ReplyAction="urn:IUserService/DisableUserResponse")]
        System.Threading.Tasks.Task<bool> DisableUserAsync(Store.Web.UserService.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/EnableUser", ReplyAction="urn:IUserService/EnableUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/EnableUserFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        bool EnableUser(Store.Web.UserService.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/EnableUser", ReplyAction="urn:IUserService/EnableUserResponse")]
        System.Threading.Tasks.Task<bool> EnableUserAsync(Store.Web.UserService.UserDto userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/DeleteUsers", ReplyAction="urn:IUserService/DeleteUsersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/DeleteUsersFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        void DeleteUsers(Store.Web.UserService.UserDto[] userDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/DeleteUsers", ReplyAction="urn:IUserService/DeleteUsersResponse")]
        System.Threading.Tasks.Task DeleteUsersAsync(Store.Web.UserService.UserDto[] userDtos);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetUserByKey", ReplyAction="urn:IUserService/GetUserByKeyResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/GetUserByKeyFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        Store.Web.UserService.UserDto GetUserByKey(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetUserByKey", ReplyAction="urn:IUserService/GetUserByKeyResponse")]
        System.Threading.Tasks.Task<Store.Web.UserService.UserDto> GetUserByKeyAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetUserByEmail", ReplyAction="urn:IUserService/GetUserByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/GetUserByEmailFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        Store.Web.UserService.UserDto GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetUserByEmail", ReplyAction="urn:IUserService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<Store.Web.UserService.UserDto> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetUserByName", ReplyAction="urn:IUserService/GetUserByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/GetUserByNameFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        Store.Web.UserService.UserDto GetUserByName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetUserByName", ReplyAction="urn:IUserService/GetUserByNameResponse")]
        System.Threading.Tasks.Task<Store.Web.UserService.UserDto> GetUserByNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetRoleByUserName", ReplyAction="urn:IUserService/GetRoleByUserNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Store.Web.UserService.FaultData), Action="urn:IUserService/GetRoleByUserNameFaultDataFault", Name="FaultData", Namespace="http://schemas.datacontract.org/2004/07/Store.ServiceContracts.ModelDTOs")]
        Store.Web.UserService.RoleDto GetRoleByUserName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:IUserService/GetRoleByUserName", ReplyAction="urn:IUserService/GetRoleByUserNameResponse")]
        System.Threading.Tasks.Task<Store.Web.UserService.RoleDto> GetRoleByUserNameAsync(string userName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Store.Web.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Store.Web.UserService.IUserService>, Store.Web.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Store.Web.UserService.UserDto[] CreateUsers(Store.Web.UserService.UserDto[] userDtos) {
            return base.Channel.CreateUsers(userDtos);
        }
        
        public System.Threading.Tasks.Task<Store.Web.UserService.UserDto[]> CreateUsersAsync(Store.Web.UserService.UserDto[] userDtos) {
            return base.Channel.CreateUsersAsync(userDtos);
        }
        
        public bool ValidateUser(string userName, string password) {
            return base.Channel.ValidateUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string userName, string password) {
            return base.Channel.ValidateUserAsync(userName, password);
        }
        
        public bool DisableUser(Store.Web.UserService.UserDto userDto) {
            return base.Channel.DisableUser(userDto);
        }
        
        public System.Threading.Tasks.Task<bool> DisableUserAsync(Store.Web.UserService.UserDto userDto) {
            return base.Channel.DisableUserAsync(userDto);
        }
        
        public bool EnableUser(Store.Web.UserService.UserDto userDto) {
            return base.Channel.EnableUser(userDto);
        }
        
        public System.Threading.Tasks.Task<bool> EnableUserAsync(Store.Web.UserService.UserDto userDto) {
            return base.Channel.EnableUserAsync(userDto);
        }
        
        public void DeleteUsers(Store.Web.UserService.UserDto[] userDtos) {
            base.Channel.DeleteUsers(userDtos);
        }
        
        public System.Threading.Tasks.Task DeleteUsersAsync(Store.Web.UserService.UserDto[] userDtos) {
            return base.Channel.DeleteUsersAsync(userDtos);
        }
        
        public Store.Web.UserService.UserDto GetUserByKey(System.Guid id) {
            return base.Channel.GetUserByKey(id);
        }
        
        public System.Threading.Tasks.Task<Store.Web.UserService.UserDto> GetUserByKeyAsync(System.Guid id) {
            return base.Channel.GetUserByKeyAsync(id);
        }
        
        public Store.Web.UserService.UserDto GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<Store.Web.UserService.UserDto> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public Store.Web.UserService.UserDto GetUserByName(string userName) {
            return base.Channel.GetUserByName(userName);
        }
        
        public System.Threading.Tasks.Task<Store.Web.UserService.UserDto> GetUserByNameAsync(string userName) {
            return base.Channel.GetUserByNameAsync(userName);
        }
        
        public Store.Web.UserService.RoleDto GetRoleByUserName(string userName) {
            return base.Channel.GetRoleByUserName(userName);
        }
        
        public System.Threading.Tasks.Task<Store.Web.UserService.RoleDto> GetRoleByUserNameAsync(string userName) {
            return base.Channel.GetRoleByUserNameAsync(userName);
        }
    }
}
